'''
Take a set of synthetic CMDs generated by eigenfunctions.py
and produce the actula eigenfunction, i.e. a gridded CMD
(with customizable grid) which intehgrated to 1 over
the whole CMD
'''

import numpy as np
import pandas as pd
import pickle,bz2,glob,itertools,sys
import matplotlib.pyplot as plt


#####################
'''
Needs to know which alphas and bfs are available.
For now only a rectagular grid of (alpha,bf) values
is supported
'''

bfs    = np.linspace(0.,1,21)         #fraction of systems that are binaries
alphas = np.arange(-4.,-0.499,0.025)  # IMF slope

EFdir = '/user/gennaro/ABC_synth/WORK/herc_simul/Eigenfunctions/'

col_edges = np.arange(-1.5,1.001,0.02)
mag_edges = np.arange(15,30.0001,0.02)

gridCMD = np.zeros([alphas.size,bfs.size,col_edges.size-1,mag_edges.size-1])

for i,alpha in enumerate(alphas):
    for j, bf in enumerate(bfs):

        file2r = 'EF_alpha'+("%.3f" % alpha)+'_bf'+("%.3f" % bf)+'.pbz2'

        with bz2.BZ2File(EFdir+file2r, 'rb') as f:
            dic = pickle.load(f)
     
        col = dic['simdata'][:,0]-dic['simdata'][:,1]
        mag = dic['simdata'][:,1]
     
        H,_,_ = np.histogram2d(col,mag,bins=[col_edges,mag_edges],normed=True)
     
        gridCMD[i,j,:,:] = H

        print(i,j,alpha,bf)
        sys.stdout.flush()

dic = {'gridCMD':gridCMD,
       'col_edges':col_edges,
       'mag_edges':mag_edges,
       'bfs':bfs,
       'alphas':alphas}

with bz2.BZ2File('/user/gennaro/ABC_synth/WORK/herc_simul/Eigenfunctions/gridCMD.pbz2', 'w') as f:
    pickle.dump(dic,f)




